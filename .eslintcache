[{"C:\\Users\\levsg\\Documents\\fb-messenger\\src\\index.js":"1","C:\\Users\\levsg\\Documents\\fb-messenger\\src\\reportWebVitals.js":"2","C:\\Users\\levsg\\Documents\\fb-messenger\\src\\App.js":"3","C:\\Users\\levsg\\Documents\\fb-messenger\\src\\Message.js":"4","C:\\Users\\levsg\\Documents\\fb-messenger\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2021,"mtime":1608624149034,"results":"9","hashOfConfig":"7"},{"size":865,"mtime":1608623512286,"results":"10","hashOfConfig":"7"},{"size":556,"mtime":1608618709066,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1u226kv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\levsg\\Documents\\fb-messenger\\src\\index.js",[],["24","25"],"C:\\Users\\levsg\\Documents\\fb-messenger\\src\\reportWebVitals.js",[],"C:\\Users\\levsg\\Documents\\fb-messenger\\src\\App.js",["26","27","28"],"import React, {useState, useEffect} from 'react';\nimport {Button, FormControl, InputLabel, Input} from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase.js';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport {IconButton} from '@material-ui/core';\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n  \n  useEffect (() => {\n    db.collection('messages')\n    .orderBy('timestamp','desc')\n    .onSnapshot( snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    })\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Enter your name'));\n  }, [])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    //setMessages([...messages, { username: username, message: input }]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\" />\n\n      <h1>Hi Messenger</h1>\n      <h2> Welcome {username}</h2>\n      \n      <form className=\"app__form\">\n      <FormControl className=\"app__formControl\">\n        <Input className=\"app__input\" placeholder=\"Enter Message...\" value={input} onChange={event => setInput(event.target.value)} />\n        <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type='submit' onClick={sendMessage}>\n          <SendIcon />\n        </IconButton>   \n      </FormControl>\n      </form>\n      \n      <FlipMove>  \n      {\n        messages.map(({id, message}) => (\n          <Message id={id} username={username} message={message} />\n        ))\n      }\n      </FlipMove>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\levsg\\Documents\\fb-messenger\\src\\Message.js",[],"C:\\Users\\levsg\\Documents\\fb-messenger\\src\\firebase.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":9,"nodeType":"35","messageId":"36","endLine":2,"endColumn":15},{"ruleId":"33","severity":1,"message":"37","line":2,"column":30,"nodeType":"35","messageId":"36","endLine":2,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":43,"column":7,"nodeType":"40","endLine":43,"endColumn":111},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]